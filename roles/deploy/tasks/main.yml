---
# task file for deploy
    - group:
        name: '{{ application_user }}'
        state: present
      ignore_errors: true  

    - name: Add the nginx user to your group
      command: 'usermod -a -G {{ application_user }} nginx'

    - name: Give our user group execute permissions on our home directory
      command: 'chmod 710 {{ user_home }}'

    - name: Change {{ user_home }} permission 
      command: 'chown -R {{ application_user }}:nginx {{ user_home }}'


    - name: Create gunicorn.service file
      copy:
        content: |        
          [Unit]
          Description=gunicorn daemon
          After=network.target

          [Service]
          User={{ application_user }}
          Group=nginx
          WorkingDirectory={{ user_home }}/transtats
          ExecStart={{ user_home }}/transtats/projectenv/bin/gunicorn --workers 3 --bind unix:{{ user_home }}/transtats/transtats/transtats.sock transtats.wsgi:application

          [Install]
          WantedBy=multi-user.target
        dest: /etc/systemd/system/gunicorn.service

    - name: Start gunicorn service
      service:
        name: gunicorn
        enabled: yes
        state: restarted
        daemon_reload: yes

    - name: Get ip
      shell: "hostname -I | cut -d ' ' -f 1" 
      register: ip

    - set_fact: 
         server_ip: "{{ ip.stdout }}"
         cacheable: true      

    - name: Copy content to nginx.conf 
      blockinfile: 
        path: /etc/nginx/nginx.conf
        insertafter: 'include.*\/etc\/nginx\/conf.d.*'
        content: | 
          server {
                   listen 80;
                   server_name "{{ server_ip }}";

                   location = /favicon.ico { access_log off; log_not_found off; }
                   location /static/ {
                   root {{ user_home }}/transtats/transtats;
                  }

                  location / {
                     proxy_set_header Host $http_host;
                     proxy_set_header X-Real-IP $remote_addr;
                     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                     proxy_set_header X-Forwarded-Proto $scheme;
                     proxy_pass http://unix:{{ user_home }}/transtats/transtats/transtats.sock;
                     proxy_connect_timeout 300s;
                     proxy_read_timeout 300s;
                  }
                } 

    - service: 
        name: nginx
        enabled: yes
        state: started
