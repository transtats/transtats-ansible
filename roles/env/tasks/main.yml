---
# task file for env setup
     - name: Install virtualenv
       command: 'pip3 install virtualenv'

     - name: create user transtats
       user:
         name: '{{ application_user }}'
         password: '$y$j9T$Z9j.RIk8qvi.wVB0bvQ///$W6e/q1qn4BeerzGVMx5cF77Az4EreNagZcau0JgA2.0'
         shell: /bin/bash
         comment: "transtats"
         uid: 1040

     - name: Get url
       shell: curl -s {{ application_url }} | grep tarball_url | head -n 1 | cut -d '"' -f 4
       register: url

     - set_fact:
         transtats_url: "{{ url.stdout }}"
         cacheable: true

     - name: Download transtats tarfile
       get_url:
         dest: '{{ user_home }}/transtats.tar.gz'
         url: "{{ transtats_url }}"
         force: yes
       become: true
       become_method: su
       become_user: '{{ application_user }}'

     - name: Extract transtats.tar.gz into '{{ user_home }}'
       unarchive:
         src: '{{ user_home }}/transtats.tar.gz'
         dest: '{{ user_home }}/'
         remote_src: yes
       become: true
       become_method: su
       become_user: '{{ application_user }}'

     - name: Remove existing app_home
       file:
         path: '{{ app_home }}'
         state: absent

     - name: Move code to '{{ user_home }}'/transtats
       shell: 'mv {{ user_home }}/transtats-transtats* {{ app_home }}'
       become: true
       become_method: su
       become_user: '{{ application_user }}'

     - name: Create virtual env
       command: 'virtualenv --system-site-packages --python=python3 projectenv'
       args:
         chdir: '{{ app_home }}'
       become: true
       become_method: su
       become_user: '{{ application_user }}'

     - name: Activate virtualenv
       shell: 'source projectenv/bin/activate'
       args:
         chdir: '{{ app_home }}'
       become: true
       become_method: su
       become_user: '{{ application_user }}'

     - name: Copying key.json.example to key.json
       command: 'cp {{ app_home }}/{{ app_name }}/settings/keys.json.example {{ app_home }}/{{ app_name }}/settings/keys.json'
       become: true
       become_method: su
       become_user: '{{ application_user }}'

     - name: Updating keys.json with required values
       lineinfile:
         path: '{{ app_home }}/{{ app_name }}/settings/keys.json'
         regexp: '^(.*)"DATABASE_HOST"(.*)$'
         line: '  "DATABASE_HOST": "10.65.207.93",'
       become: true
       become_method: su
       become_user: '{{ application_user }}'

     - name: install package-requirements
       pip:
         requirements: '{{ requirements_path }}'
         state: latest
         virtualenv: '{{ app_home }}/projectenv'
         virtualenv_command: virtualenv
         virtualenv_site_packages: yes
       become: true
       become_method: su
       become_user: '{{ application_user }}'

     - name: Activate virtualenv, Run make migrate & make static and initlogin
       shell: 'source projectenv/bin/activate && make migrate && make static && ./manage.py initlogin'
       args:
         chdir: '{{ app_home }}'
       become: true
       become_method: su
       become_user: '{{ application_user }}'
